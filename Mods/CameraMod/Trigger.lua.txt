local CAMERA_LEFT_OFFSET = 1
local CAMERA_RIGHT_OFFSET = 1
local CAMERA_TOP_OFFSET = 0.5
local CAMERA_BOTTOM_OFFSET = -1

local WORLD_HALF_WIDTH = 10

local mod = {}

local Camera = { 
    targetUnit = nil,

    shakeStarted = false,
    shakeTimeLeft = 0,
    shakeDelayTime = 0,

    shakeWithUnit = false,
    shakeUnit = nil,

    worldCenter = nil,
}
Camera.__index = Camera
function Camera:new(targetUnit)
    local camera = {}
    setmetatable(camera, Camera)

    DCEI.SetCameraDistanceSmooth(20)

    camera.targetUnit = targetUnit
    
    camera.shakeStarted = false
    camera.shakeTimeLeft = 0
    camera.shakeDelayTime = 0

    camera.shakeWithUnit = false
    camera.shakeUnit = nil

    camera.worldCenter = DCEI.GetMapCenterPoint()

    return camera
end
function Camera:Update(deltaTime)
    if not self.shakeStarted then
        if self.targetUnit == nil then
            return
        end

        self:UpdateCameraPosition(self.targetUnit)
    else
        if self.shakeDelayTime <= 0 then
            self.shakeTimeLeft = self.shakeTimeLeft - deltaTime
            if self.shakeTimeLeft <= 0 then
                self.shakeStarted = false
                self.shakeTimeLeft = 0

                if self.shakeWithUnit then
                    DCEI.RemoveUnit(self.shakeUnit)
                end
            end
        end
    end

    if self.shakeDelayTime > 0 then
        self.shakeDelayTime = self.shakeDelayTime - deltaTime
        if self.shakeDelayTime <= 0 then
            self.shakeStarted = true
        end
    end
end
function Camera:UpdateCameraPosition(targetUnit)
    local position = DCEI.GetUnitPosition2D(self.targetUnit)

    if position.x > self.worldCenter.x + WORLD_HALF_WIDTH - CAMERA_RIGHT_OFFSET then
        position.x = self.worldCenter.x + WORLD_HALF_WIDTH - CAMERA_RIGHT_OFFSET

    elseif position.x < self.worldCenter.x - WORLD_HALF_WIDTH + CAMERA_LEFT_OFFSET then
        position.x = self.worldCenter.x - WORLD_HALF_WIDTH + CAMERA_LEFT_OFFSET

    elseif position.y > self.worldCenter.y + WORLD_HALF_WIDTH - CAMERA_TOP_OFFSET then
        position.y = self.worldCenter.y + WORLD_HALF_WIDTH - CAMERA_TOP_OFFSET

    elseif position.y < self.worldCenter.y - WORLD_HALF_WIDTH + CAMERA_BOTTOM_OFFSET then
        position.y = self.worldCenter.y - WORLD_HALF_WIDTH + CAMERA_BOTTOM_OFFSET

    end

    DCEI.SetCameraFocusSmooth(position.x, position.y, true)
end
function Camera:UpdateTarget(targetUnit)
    self.targetUnit = targetUnit
end
function Camera:GetTargetUnit()
    return self.targetUnit
end
function Camera:StartShake(shakeTime, shakeDelayTime)
    if self.shakeStarted or self.shakeDelayTime > 0 then
        return
    end

    self.shakeTimeLeft = shakeTime
    self.shakeDelayTime = shakeDelayTime
    if shakeDelayTime <= 0 then
        self.shakeStarted = true
    end
end
function Camera:StartShakeWithUnit(shakeTime, shakeDelayTime)
    if self.shakeStarted or self.shakeDelayTime > 0 then
        return
    end

    local shakerUnit = DCEI.CreateUnit(0, 0, mod.CAMERA_SHAKER_UNIT, 0, 0)

    self.shakeWithUnit = true
    self.shakeUnit = shakerUnit
    self:StartShake(shakeTime, shakeDelayTime)
end

mod.CAMERA_SHAKER_UNIT = "_Camera_ShakerUnit"
mod.Camera = Camera
return mod