local ArcadeCore = GameModules["Arcade/Core"]
local MainMap = GameModules["Maps"]
local BaseRoomMod = GameModules["Mods/NewRoomMod"]
local PlayerMod = GameModules["Mods/PlayerMod"]
local InventoryMod = GameModules["Mods/InventoryMod"]

local BaseRoomGenerator = BaseRoomMod.RoomGenerator

function ValidateAndLoadSaveData()
    BaseRoomGenerator:ClearSaveData()
    PlayerMod.Player:ClearData()
    BaseRoomMod.ItemDrops:ClearData()

    for i = 1, 4 do
        DCEI.Save.Set("Slot_" .. i .. "_Name", nil)
        DCEI.Save.Set("Slot_" .. i .. "_Stack", nil)
        DCEI.Save.Set("Slot_" .. i .. "_RechargeActive", nil)
        DCEI.Save.Set("Slot_" .. i .. "_MaxRechargeTime", nil)
        DCEI.Save.Set("Slot_" .. i .. "_CurrentRechargeTime", nil)
        DCEI.Save.Commit()
    end

    DCEI.Save.Set("RoomLevel", nil)
    DCEI.Save.Set("RoomName", nil)
    DCEI.Save.Set("LastDirection", nil)
    DCEI.Save.Commit()

    local savedRoomType = DCEI.Save.Get(MainMap.RoomName)
    if savedRoomType ~= nil then
        local roomPath = BaseRoomMod.GetRoomPath(savedRoomType)
        DCEI.PlayLevel(roomPath, savedRoomType)
    else
        BaseRoomGenerator:ClearSaveData() -- If nothing exits reload a fresh game
    end
end

DCEI.TriggerAddTimerEventElapsed(
    function()
        local spawnPoint = DCEI.FindUnit(MainMap.SpawnMarkerUnit)
        local spawnPosition = DCEI.GetUnitPosition2D(spawnPoint)
        DCEI.RemoveUnit(spawnPoint)

        ValidateAndLoadSaveData()
        MainMap.Start(spawnPosition, nil, nil, nil)
    end,
    0
)